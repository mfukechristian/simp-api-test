// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sims.API.Data;

#nullable disable

namespace Sims.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sims.API.Models.Sim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CanLock")
                        .HasColumnType("bit");

                    b.Property<int>("DataSetId")
                        .HasColumnType("int");

                    b.Property<string>("IMEI")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("LockDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("MSISDN")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("MSISDN_Int")
                        .HasColumnType("bigint");

                    b.Property<long>("MSISDN_Num")
                        .HasColumnType("bigint");

                    b.Property<string>("SIMNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("SIMStatus")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataSetId");

                    b.HasIndex("MSISDN")
                        .IsUnique();

                    b.HasIndex("SIMNumber")
                        .IsUnique()
                        .HasFilter("[SIMNumber] IS NOT NULL");

                    b.ToTable("Sims");
                });

            modelBuilder.Entity("Sims.API.Models.SimDataSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("UploadedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("Sims.API.Models.Sim", b =>
                {
                    b.HasOne("Sims.API.Models.SimDataSet", "DataSet")
                        .WithMany("Sims")
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSet");
                });

            modelBuilder.Entity("Sims.API.Models.SimDataSet", b =>
                {
                    b.Navigation("Sims");
                });
#pragma warning restore 612, 618
        }
    }
}
